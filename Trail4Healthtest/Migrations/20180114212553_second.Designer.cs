// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Trail4Healthtest.Models;

namespace Trail4Healthtest.Migrations
{
    [DbContext(typeof(Trails4HealthContext))]
    [Migration("20180114212553_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Train4Health.Models.AgendaTuristaTrilho", b =>
                {
                    b.Property<int>("AgendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("agendaId");

                    b.Property<DateTime?>("Datafim")
                        .HasColumnName("datafim")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Datainicio")
                        .HasColumnName("datainicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Estadoagendado")
                        .HasColumnName("estadoagendado")
                        .HasMaxLength(150);

                    b.Property<string>("Tempogasto")
                        .HasColumnName("tempogasto")
                        .HasMaxLength(150);

                    b.Property<int>("Trilhoid")
                        .HasColumnName("trilhoid");

                    b.Property<int>("Turistaid")
                        .HasColumnName("turistaid");

                    b.HasKey("AgendaId");

                    b.HasIndex("Trilhoid");

                    b.HasIndex("Turistaid");

                    b.ToTable("AgendaTuristaTrilho");
                });

            modelBuilder.Entity("Train4Health.Models.Avaliacao", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("avaliacaoId");

                    b.Property<string>("Classificacao")
                        .HasColumnName("classificacao");

                    b.HasKey("AvaliacaoId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("Train4Health.Models.Comentarios", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comentarioId");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnName("avaliacaoId");

                    b.Property<string>("Comentar")
                        .HasColumnName("comentar");

                    b.Property<string>("Completou");

                    b.Property<string>("DuracaoTrilho")
                        .HasColumnName("duracaoTrilho");

                    b.Property<int>("TrilhoId")
                        .HasColumnName("trilhoId");

                    b.Property<int>("TuristaId")
                        .HasColumnName("turistaId");

                    b.HasKey("ComentarioId");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("TrilhoId");

                    b.HasIndex("TuristaId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Train4Health.Models.Desnivel", b =>
                {
                    b.Property<int>("DesnivelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("desnivelId");

                    b.Property<string>("Nomedesnivel")
                        .HasColumnName("nomedesnivel");

                    b.Property<string>("Observacoes")
                        .HasColumnName("observacoes");

                    b.HasKey("DesnivelId");

                    b.ToTable("Desnivel");
                });

            modelBuilder.Entity("Train4Health.Models.Dificuldade", b =>
                {
                    b.Property<int>("DificuldadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dificuldadeId");

                    b.Property<string>("Nomedificuldade")
                        .HasColumnName("nomedificuldade");

                    b.Property<string>("Observacoes");

                    b.HasKey("DificuldadeId");

                    b.ToTable("Dificuldade");
                });

            modelBuilder.Entity("Train4Health.Models.EpocaAconcelhada", b =>
                {
                    b.Property<int>("EpocaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("epocaId");

                    b.Property<string>("Nomeepoca")
                        .HasColumnName("nomeepoca");

                    b.HasKey("EpocaId");

                    b.ToTable("EpocaAconcelhada");
                });

            modelBuilder.Entity("Train4Health.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("estadoId");

                    b.Property<string>("Nomeestado")
                        .HasColumnName("nomeestado");

                    b.HasKey("EstadoId");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Train4Health.Models.EstadoTrilho", b =>
                {
                    b.Property<int>("EstadoTrilhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("estadoTrilhoId");

                    b.Property<string>("Causa")
                        .HasColumnName("causa");

                    b.Property<DateTime>("Datafim")
                        .HasColumnName("datafim");

                    b.Property<DateTime>("Datainicio")
                        .HasColumnName("datainicio");

                    b.Property<int>("EstadoId")
                        .HasColumnName("estadoId");

                    b.Property<int>("TrilhoId")
                        .HasColumnName("trilhoId");

                    b.HasKey("EstadoTrilhoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TrilhoId");

                    b.ToTable("EstadoTrilho");
                });

            modelBuilder.Entity("Train4Health.Models.Etapa", b =>
                {
                    b.Property<int>("EtapaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("etapaId");

                    b.Property<string>("Distancia")
                        .HasColumnName("distancia");

                    b.Property<string>("Duracao")
                        .HasColumnName("duracao");

                    b.Property<string>("Geolocalizacao")
                        .HasColumnName("geolocalizacao");

                    b.Property<string>("Nomeetapa")
                        .HasColumnName("nomeetapa");

                    b.HasKey("EtapaId");

                    b.ToTable("Etapa");
                });

            modelBuilder.Entity("Train4Health.Models.EtapaTrilho", b =>
                {
                    b.Property<int>("EtapatrilhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("etapatrilhoId");

                    b.Property<bool?>("Ativo");

                    b.Property<int>("Etapaid")
                        .HasColumnName("etapaid");

                    b.Property<string>("OrdemEtapa")
                        .HasColumnName("ordem_etapa")
                        .HasMaxLength(150);

                    b.Property<int>("TrilhoId")
                        .HasColumnName("trilhoId");

                    b.HasKey("EtapatrilhoId");

                    b.HasIndex("Etapaid");

                    b.HasIndex("TrilhoId");

                    b.ToTable("EtapaTrilho");
                });

            modelBuilder.Entity("Train4Health.Models.Newsletter", b =>
                {
                    b.Property<int>("NewletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("newletterId");

                    b.Property<DateTime>("Data")
                        .HasColumnName("data");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao");

                    b.Property<byte>("Foto")
                        .HasColumnName("foto");

                    b.Property<int?>("TrilhoId")
                        .HasColumnName("trilhoId");

                    b.HasKey("NewletterId");

                    b.HasIndex("TrilhoId");

                    b.ToTable("Newsletter");
                });

            modelBuilder.Entity("Train4Health.Models.Trilho", b =>
                {
                    b.Property<int>("TrilhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("trilhoId");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo");

                    b.Property<int>("Coddesnivel")
                        .HasColumnName("coddesnivel");

                    b.Property<int>("Coddificuldade")
                        .HasColumnName("coddificuldade");

                    b.Property<int>("Codepocaaconselhda")
                        .HasColumnName("codepocaaconselhda");

                    b.Property<string>("Distanciaapercorrer")
                        .HasColumnName("distanciaapercorrer");

                    b.Property<string>("Duracaomedia")
                        .HasColumnName("duracaomedia");

                    b.Property<string>("Locfim")
                        .HasColumnName("locfim");

                    b.Property<string>("Locinicio")
                        .HasColumnName("locinicio");

                    b.Property<bool>("NewsletterAtiva")
                        .HasColumnName("newsletterAtiva");

                    b.Property<string>("Nometrilho")
                        .HasColumnName("nometrilho");

                    b.HasKey("TrilhoId");

                    b.HasIndex("Coddesnivel");

                    b.HasIndex("Coddificuldade");

                    b.HasIndex("Codepocaaconselhda");

                    b.ToTable("Trilho");
                });

            modelBuilder.Entity("Train4Health.Models.Turista", b =>
                {
                    b.Property<int>("TuristaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("turistaId");

                    b.Property<string>("Contatoemergencia")
                        .HasColumnName("contatoemergencia");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<int>("Nif")
                        .HasColumnName("nif");

                    b.Property<string>("Nome")
                        .HasColumnName("nome");

                    b.Property<string>("NumeroTelefone")
                        .HasColumnName("numeroTelefone");

                    b.HasKey("TuristaId");

                    b.ToTable("Turista");
                });

            modelBuilder.Entity("Train4Health.Models.AgendaTuristaTrilho", b =>
                {
                    b.HasOne("Train4Health.Models.Trilho", "Trilho")
                        .WithMany("AgendaTuristaTrilho")
                        .HasForeignKey("Trilhoid")
                        .HasConstraintName("FK_AgendaTuristaTrilho_Trilho");

                    b.HasOne("Train4Health.Models.Turista", "Turista")
                        .WithMany("AgendaTuristaTrilho")
                        .HasForeignKey("Turistaid")
                        .HasConstraintName("FK_AgendaTuristaTrilho_Turista");
                });

            modelBuilder.Entity("Train4Health.Models.Comentarios", b =>
                {
                    b.HasOne("Train4Health.Models.Avaliacao", "Avaliacao")
                        .WithMany("Comentarios")
                        .HasForeignKey("AvaliacaoId")
                        .HasConstraintName("FK_Comentarios_Avaliacao")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Train4Health.Models.Trilho", "Trilho")
                        .WithMany("Comentarios")
                        .HasForeignKey("TrilhoId")
                        .HasConstraintName("FK_Comentarios_Trilho");

                    b.HasOne("Train4Health.Models.Turista", "Turista")
                        .WithMany("Comentarios")
                        .HasForeignKey("TuristaId")
                        .HasConstraintName("FK_Comentarios_Turista")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Train4Health.Models.EstadoTrilho", b =>
                {
                    b.HasOne("Train4Health.Models.Estado", "Estado")
                        .WithMany("EstadoTrilho")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_EstadoTrilho_Estado");

                    b.HasOne("Train4Health.Models.Trilho", "Trilho")
                        .WithMany("EstadoTrilho")
                        .HasForeignKey("TrilhoId")
                        .HasConstraintName("FK_EstadoTrilho_Trilho");
                });

            modelBuilder.Entity("Train4Health.Models.EtapaTrilho", b =>
                {
                    b.HasOne("Train4Health.Models.Etapa", "Etapa")
                        .WithMany("EtapaTrilho")
                        .HasForeignKey("Etapaid")
                        .HasConstraintName("FK_EtapaTrilho_Etapa");

                    b.HasOne("Train4Health.Models.Trilho", "Trilho")
                        .WithMany("EtapaTrilho")
                        .HasForeignKey("TrilhoId")
                        .HasConstraintName("FK_EtapaTrilho_Trilho");
                });

            modelBuilder.Entity("Train4Health.Models.Newsletter", b =>
                {
                    b.HasOne("Train4Health.Models.Trilho", "Trilho")
                        .WithMany("Newsletter")
                        .HasForeignKey("TrilhoId")
                        .HasConstraintName("FK_Newsletter_Trilho");
                });

            modelBuilder.Entity("Train4Health.Models.Trilho", b =>
                {
                    b.HasOne("Train4Health.Models.Desnivel", "CoddesnivelNavigation")
                        .WithMany("Trilho")
                        .HasForeignKey("Coddesnivel")
                        .HasConstraintName("FK_Trilho_Desnivel");

                    b.HasOne("Train4Health.Models.Dificuldade", "CoddificuldadeNavigation")
                        .WithMany("Trilho")
                        .HasForeignKey("Coddificuldade")
                        .HasConstraintName("FK_Trilho_Dificuldade");

                    b.HasOne("Train4Health.Models.EpocaAconcelhada", "CodepocaaconselhdaNavigation")
                        .WithMany("Trilho")
                        .HasForeignKey("Codepocaaconselhda")
                        .HasConstraintName("FK_Trilho_EpocaAconselhada");
                });
#pragma warning restore 612, 618
        }
    }
}
